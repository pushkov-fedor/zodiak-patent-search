# tests/unit/test_formatters.py

from datetime import date

from src.domain.entities.patent import Patent
from src.interfaces.telegram.utils.formatters import (
    format_patent_message,
    truncate_text,
)


def test_truncate_text():
    long_text = "a" * 5000
    truncated = truncate_text(long_text, max_length=4000)
    assert len(truncated) == 4000 + len("...\n\n<i>–ü–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∞ –ø–∞—Ç–µ–Ω—Ç</i>")
    assert truncated.endswith("...\n\n<i>–ü–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∞ –ø–∞—Ç–µ–Ω—Ç</i>")

    short_text = "Short text"
    assert truncate_text(short_text, max_length=4000) == short_text


def test_format_patent_message():
    patent = Patent(
        id="123",
        title="Test Patent",
        publication_date=date(2023, 1, 1),
        application_date=date(2022, 1, 1),
        authors=["Author A"],
        patent_holders=["Holder A"],
        ipc_codes=["IPC1"],
        abstract="Abstract",
        claims="Claims",
        description="Description"
    )

    # –¢–µ—Å—Ç –±–µ–∑ summary (–¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å 3 —Å–æ–æ–±—â–µ–Ω–∏—è: –æ—Å–Ω–æ–≤–Ω–æ–µ, —Ä–µ—Ñ–µ—Ä–∞—Ç –∏ —Ñ–æ—Ä–º—É–ª–∞)
    messages = format_patent_message(patent, index=1)
    assert len(messages) == 3

    main_info = messages[0]
    assert "üîé <b>–ü–∞—Ç–µ–Ω—Ç #1</b>" in main_info
    assert "üìë <b>–ù–æ–º–µ—Ä –ø–∞—Ç–µ–Ω—Ç–∞:</b> 123" in main_info
    assert "üîó <b>–°—Å—ã–ª–∫–∞:</b> https://searchplatform.rospatent.gov.ru/doc/123" in main_info
    assert "üìë <b>–ù–∞–∑–≤–∞–Ω–∏–µ:</b> Test Patent" in main_info
    assert "üìÖ <b>–î–∞—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:</b> 01.01.2023" in main_info
    assert "üìÖ <b>–î–∞—Ç–∞ –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–∫–∏:</b> 01.01.2022" in main_info
    assert "üë§ <b>–ê–≤—Ç–æ—Ä—ã:</b> Author A" in main_info
    assert "üíº <b>–ü–∞—Ç–µ–Ω—Ç–æ–æ–±–ª–∞–¥–∞—Ç–µ–ª–∏:</b> Holder A" in main_info
    assert "üî∞ <b>–ú–ü–ö:</b> IPC1" in main_info

    assert "üìù <b>–†–µ—Ñ–µ—Ä–∞—Ç:</b>\nAbstract" in messages[1]
    assert "üìã <b>–§–æ—Ä–º—É–ª–∞ –∏–∑–æ–±—Ä–µ—Ç–µ–Ω–∏—è:</b>\nClaims" in messages[2]

    # –¢–µ—Å—Ç —Å —É—Å–ø–µ—à–Ω—ã–º summary (–¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å 2 —Å–æ–æ–±—â–µ–Ω–∏—è: –æ—Å–Ω–æ–≤–Ω–æ–µ –∏ –∞–Ω–∞–ª–∏–∑)
    messages_with_summary = format_patent_message(
        patent, 
        index=1, 
        summary={"status": "success", "summary": "Test analysis"}
    )
    assert len(messages_with_summary) == 2
    assert "ü§ñ <b>–ê–Ω–∞–ª–∏–∑:</b>\nTest analysis" in messages_with_summary[1]

    # –¢–µ—Å—Ç —Å –Ω–µ—É—Å–ø–µ—à–Ω—ã–º summary (–¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å 3 —Å–æ–æ–±—â–µ–Ω–∏—è –∫–∞–∫ –±–µ–∑ summary)
    messages_with_failed_summary = format_patent_message(
        patent, 
        index=1, 
        summary={"status": "error", "summary": None}
    )
    assert len(messages_with_failed_summary) == 3