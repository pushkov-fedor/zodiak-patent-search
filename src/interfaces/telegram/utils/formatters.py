# src/interfaces/telegram/utils/formatters.py

from typing import Any, List, Optional


def truncate_text(text: str, max_length: int = 4000) -> str:
    """–û–±—Ä–µ–∑–∞–µ—Ç —Ç–µ–∫—Å—Ç –¥–æ —É–∫–∞–∑–∞–Ω–Ω–æ–π –¥–ª–∏–Ω—ã –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –º–Ω–æ–≥–æ—Ç–æ—á–∏–µ"""
    if len(text) <= max_length:
        return text
    return text[:max_length] + "...\n\n<i>–ü–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∞ –ø–∞—Ç–µ–Ω—Ç</i>"


def format_patent_message(patent: Any, index: int, summary: Optional[dict] = None) -> List[str]:
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–∞—Ç–µ–Ω—Ç–µ"""
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –ø–∞—Ç–µ–Ω—Ç
    patent_link = f"https://searchplatform.rospatent.gov.ru/doc/{patent.id}"
    
    # –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤—Å–µ–≥–¥–∞ –±—É–¥–µ—Ç –≤ –ø–µ—Ä–≤–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏
    main_info = (
        f"üîé <b>–ü–∞—Ç–µ–Ω—Ç #{index}</b>\n"
        f"üìë <b>–ù–æ–º–µ—Ä –ø–∞—Ç–µ–Ω—Ç–∞:</b> {patent.id}\n"
        f"üîó <b>–°—Å—ã–ª–∫–∞:</b> {patent_link}\n"
        f"üìë <b>–ù–∞–∑–≤–∞–Ω–∏–µ:</b> {patent.title}\n"
        f"üìÖ <b>–î–∞—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:</b> {patent.publication_date}\n"
        f"üìÖ <b>–î–∞—Ç–∞ –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–∫–∏:</b> {patent.application_date}\n"
        f"üë§ <b>–ê–≤—Ç–æ—Ä—ã:</b> {', '.join(patent.authors)}\n"
        f"üíº <b>–ü–∞—Ç–µ–Ω—Ç–æ–æ–±–ª–∞–¥–∞—Ç–µ–ª–∏:</b> {', '.join(patent.patent_holders)}\n"
        f"üî∞ <b>–ú–ü–ö:</b> {', '.join(patent.ipc_codes)}"
    )

    parts = [main_info]

    # –î–æ–±–∞–≤–ª—è–µ–º —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏—é –æ—Ç GigaChat, –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å
    if summary and summary.get("status") == "success":
        parts.append(f"ü§ñ <b>–ê–Ω–∞–ª–∏–∑:</b>\n{summary['summary']}")
    else:
        # –ï—Å–ª–∏ –Ω–µ—Ç —Å—É–º–º–∞—Ä–∏–∑–∞—Ü–∏–∏, –¥–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        if patent.abstract:
            parts.append(f"üìù <b>–†–µ—Ñ–µ—Ä–∞—Ç:</b>\n{truncate_text(patent.abstract)}")
        
        if patent.claims:
            parts.append(f"üìã <b>–§–æ—Ä–º—É–ª–∞ –∏–∑–æ–±—Ä–µ—Ç–µ–Ω–∏—è:</b>\n{truncate_text(patent.claims)}")

    return parts